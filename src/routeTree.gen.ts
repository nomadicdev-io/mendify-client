/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as EmailVerifiedRouteImport } from './routes/email-verified'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardDashboardRouteImport } from './routes/dashboard/_dashboard'
import { Route as DashboardDashboardIndexRouteImport } from './routes/dashboard/_dashboard/index'

const DashboardRouteImport = createFileRoute('/dashboard')()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const EmailVerifiedRoute = EmailVerifiedRouteImport.update({
  id: '/email-verified',
  path: '/email-verified',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardIndexRoute = DashboardDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/email-verified': typeof EmailVerifiedRoute
  '/dashboard': typeof DashboardDashboardRouteWithChildren
  '/dashboard/': typeof DashboardDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/email-verified': typeof EmailVerifiedRoute
  '/dashboard': typeof DashboardDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/email-verified': typeof EmailVerifiedRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_dashboard': typeof DashboardDashboardRouteWithChildren
  '/dashboard/_dashboard/': typeof DashboardDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/email-verified' | '/dashboard' | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/email-verified' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/email-verified'
    | '/dashboard'
    | '/dashboard/_dashboard'
    | '/dashboard/_dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EmailVerifiedRoute: typeof EmailVerifiedRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/email-verified': {
      id: '/email-verified'
      path: '/email-verified'
      fullPath: '/email-verified'
      preLoaderRoute: typeof EmailVerifiedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_dashboard/': {
      id: '/dashboard/_dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardIndexRouteImport
      parentRoute: typeof DashboardDashboardRoute
    }
  }
}

interface DashboardDashboardRouteChildren {
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
}

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren)

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EmailVerifiedRoute: EmailVerifiedRoute,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
